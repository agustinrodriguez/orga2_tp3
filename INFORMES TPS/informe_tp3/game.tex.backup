Para manejar toda la lógica del juego, los cambios en la pantalla y los mapeos correspondientes tenemos una estructura
llamada Game. Básicamente se encarga de las 3 posibles acciones de una tarea: minar, mover y lanzar misiles.
Tiene guardado internamente una matriz tablero, donde almacenamos el estado del juego actual. 
Ni bien comienza el juego, procedemos a inicializarlo: ponemos todos los valores de la matriz tablero en 0
y distruibuimos las tareas a lo largo y ancho del mapa. Para indicar que el tanque está en cierta posición,
en la matriz tablero ubicamos el número del tanque en la posición correspondiente.

\begin{enumerate}
 \item \textbf{Minar:} Recibimos la posición relativa al tanque que quiere minar y calculamos la posición que le corresponde
 al tablero y con esa, colocamos el valor -1 en el tablero (arbitrario, indica que es una mina) y la dibujamos en pantalla.
 \item \textbf{Misil:}En esta funcion, copiamos a un cierto destino dado en parte por parametro(por parametro nos dan cuanto se movera el misil de nuestra
 posicion actual)la porcion de codigo que nos dan por parametro.
 Esto, similar a lo conocido como virus, en caso de caer dicho misil en una parte del codigo de otro tanque se lo borrara o cambiara,
 generando un posible error en ese tanque.
 \item \textbf{Mover:} Para realizar esta funcion del juego utilizamos un struct tanque, el cual tiene su posicion columna y fila,
 lo que hacemos es incrementar o decrementa el valor fila y/o columna segun corresponda. A su vez dentro de este struct tenemos
 la ultima direccion virtual mapeada, y se la aumentamos siempre y cuando se mueva a una posicion donde no estaba.
 En caso de haber una superposicion con otro tanque no ocurrira nada, en cambio si en esa posicion el tablero$_{fila}$
 es igual a -1, el tanque explotara y dejara de andar.
\end{enumerate}
